Sub OutputRecordsToSheet()

    ' Define variables
    Dim records As Object
    Dim record As Object
    Dim rowIndex As Long
    Dim dataArray As Variant
    Dim outputRange As Range
    
    ' Call API to get records
    ' Replace "API_URL" with the actual URL of the API you are using
    Set records = GetRecordsFromAPI("API_URL")
    
    ' Check if any records were returned
    If records Is Nothing Then
        MsgBox "No records were returned from the API.", vbExclamation
        Exit Sub
    End If
    
    ' Remove data from previous runs
    With ThisWorkbook.Sheets("Sheet1")
        .Range("OutputRange").ClearContents
    End With
    
    ' Loop through records and populate array
    ReDim dataArray(1 To records.Count, 1 To 3)
    rowIndex = 1
    For Each record In records
        dataArray(rowIndex, 1) = record("issueKey")
        dataArray(rowIndex, 2) = record("startDate")
        dataArray(rowIndex, 3) = record("endDate")
        rowIndex = rowIndex + 1
    Next record
    
    ' Output array to dynamic named range
    With ThisWorkbook.Sheets("Sheet1")
        ' Delete existing named range (if any)
        On Error Resume Next
        .Names("OutputRange").Delete
        On Error GoTo 0
        
        ' Create new named range
        Set outputRange = .Range("D2").Resize(rowIndex - 1, 3)
        .Names.Add Name:="OutputRange", RefersTo:=outputRange
        outputRange.Value = dataArray
    End With
    
End Sub
In this updated code, we first check if any records were returned from the API using the Is Nothing function. If no records were returned, we display a message box and exit the sub.

If records were returned, we proceed to remove any existing data from the worksheet and then loop through the records to populate the array.

Finally, we output the array to the dynamic named range as before.

I hope this helps!


at the first run, the range "OutputRange" is not defined, it cause error for the line .Range("OutputRange").ClearContents . any suggestion

Yes, you're right - since the named range doesn't exist yet on the first run, the line .Range("OutputRange").ClearContents will produce an error. To avoid this, you can add an error handler to check if the named range exists before trying to clear its contents. Here's the updated code:

Sub OutputRecordsToSheet()

    ' Define variables
    Dim records As Object
    Dim record As Object
    Dim rowIndex As Long
    Dim dataArray As Variant
    Dim outputRange As Range
    
    ' Call API to get records
    ' Replace "API_URL" with the actual URL of the API you are using
    Set records = GetRecordsFromAPI("API_URL")
    
    ' Check if any records were returned
    If records Is Nothing Then
        MsgBox "No records were returned from the API.", vbExclamation
        Exit Sub
    End If
    
    ' Remove data from previous runs
    On Error Resume Next
    With ThisWorkbook.Sheets("Sheet1").Range("OutputRange")
        .ClearContents
        If Err.Number <> 0 Then
            Err.Clear
            ' Named range doesn't exist yet - do nothing
        End If
    End With
    On Error GoTo 0
    
    ' Loop through records and populate array
    ReDim dataArray(1 To records.Count, 1 To 3)
    rowIndex = 1
    For Each record In records
        dataArray(rowIndex, 1) = record("issueKey")
        dataArray(rowIndex, 2) = record("startDate")
        dataArray(rowIndex, 3) = record("endDate")
        rowIndex = rowIndex + 1
    Next record
    
    ' Output array to dynamic named range
    With ThisWorkbook.Sheets("Sheet1")
        ' Delete existing named range (if any)
        On Error Resume Next
        .Names("OutputRange").Delete
        On Error GoTo 0
        
        ' Create new named range
        Set outputRange = .Range("D2").Resize(rowIndex - 1, 3)
        .Names.Add Name:="OutputRange", RefersTo:=outputRange
        outputRange.Value = dataArray
    End With
    
End Sub
